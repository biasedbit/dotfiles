# MARK: misc

# Always use neovim
alias vi="nvim"
alias vim="nvim"

# Disk usage of items in current dir
alias dud="du -d 1 -h"

# Confirm when deleting >3 files or recursively deleting dirs
alias rm='rm -I'
# Exclude rm from alias expansion
GLOBALIAS_FILTER_VALUES+=(rm)

alias cm="chezmoi"
alias reload="cm init --apply && exec zsh"
alias cmedit="cm edit --apply"

# Print everything in $PATH, one item per line
function ppath() {
  echo $PATH | tr ':' '\n' | sort
}

function clipcopy() {
  {{- if eq .chezmoi.os "darwin" }}
  pbcopy
  {{- else }}
  xclip -selection clipboard
  {{- end }}
}

function clippaste() {
  {{- if eq .chezmoi.os "darwin" }}
  pbpaste
  {{- else }}
  xclip -selection clipboard -o
  {{- end }}
}

# MARK: ls

function ls() {
  # Replace '-la' arg with -lA (default for 'la' alias; hides ./ and ../)
  command colorls --sd --gs --no-group --time-style='+ %Y-%m-%d %H:%M:%S' ${@//-la/-lA}
}
alias ll="ls -l"
alias la="ll -A"
# Don't expand ls alias
GLOBALIAS_FILTER_VALUES+=(ls)

# MARK: git

alias gs="git status"
alias gl="git log --oneline --decorate --graph"
alias gg="git grep --break --heading --line-number"
# Copy current branch name to clipboard
alias gbcp="git rev-parse --abbrev-ref HEAD | tr -d '\n' | clipcopy"
# Push/pull current branch to/from origin.
alias gpush="git push origin \$(git rev-parse --abbrev-ref HEAD)"
alias gpull="git pull origin \$(git rev-parse --abbrev-ref HEAD)"

# Kill all processes with a command matching the search term.
function killmatch() {
  if [ $# -eq 0 ]; then
    echo "Usage: killmatch [-SIGNAL] <search_term>"
    return 1
  fi

  local signal="-TERM"
  local search_term

  if [[ "$1" =~ ^- ]]; then
    # if 1st arg is a signal, override SIGTERM
    signal="$1"
    search_term="$2"
  else
    search_term="$1"
  fi

  ps -eo pid,command | grep "$search_term" | awk '{print $1}' | xargs kill $signal > /dev/null 2>&1
}

# MARK: pretty printing

function info() {
  echo "${fg[blue]}$*${reset_color}"
}

function warning() {
  echo "${fg[yellow]}$*${reset_color}"
}

function error() {
  echo "${fg[red]}$*${reset_color}"
}

function success() {
  echo "${fg[green]}$*${reset_color}"
}

{{- if eq .chezmoi.os "darwin" }}
# MARK: macos

local os_update_cmd="brew update && brew upgrade"
local os_cleanup_cmd="brew cleanup && brew autoremove"

function nuke_homebrew() {
  # Switch back to bash to avoid new sessions breaking due to
  # missing zsh (deleted in the purge process below)
  chsh -s /bin/bash
  /opt/homebrew/bin/brew remove --cask --force $(/opt/homebrew/bin/brew list)
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
  rm -rf ~/Library/Caches/Homebrew
  sudo rm -rf /opt/homebrew/
}
{{- end }}

function update() {
  [[ -n "$os_update_cmd" ]] && eval "$os_update_cmd"
  gem update --system && \
    gem update && \
    mise up && \
    cm upgrade
}

function cleanup() {
  [[ -n "$os_cleanup_cmd" ]] && eval "$os_cleanup_cmd"
  gem cleanup && \
    mise prune -y
}
